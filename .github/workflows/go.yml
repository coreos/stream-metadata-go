# Maintained in https://github.com/coreos/repo-templates
# Do not edit downstream.

name: Go
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read

# don't waste job slots on superseded code
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version: [1.23.x, 1.24.x]
        os: [ubuntu-latest]
        include:
          - go-version: 1.24.x
            os: macos-latest
          - go-version: 1.24.x
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Check modules
      run: go mod verify
    - name: Build
      shell: bash
      run: make
    - name: Test
      shell: bash
      run: make test
    - name: Check Go formatting (gofmt)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        GO_FILES=$(find . -name '*.go' -not -path "./vendor/*")
        UNFORMATTED_FILES=$(gofmt -l $GO_FILES)
        if [ -n "$UNFORMATTED_FILES" ]; then
          echo "Go files are not formatted. Please run 'gofmt -w .' on your code."
          gofmt -d $UNFORMATTED_FILES
          exit 1
        fi
        echo "All Go files are correctly formatted."
    - name: Run linter
      uses: golangci/golangci-lint-action@v8
      if: runner.os == 'Linux'
      with:
        version: v2.1.6
